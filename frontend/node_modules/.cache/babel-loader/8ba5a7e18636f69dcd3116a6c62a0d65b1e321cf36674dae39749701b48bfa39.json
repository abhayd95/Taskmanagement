{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  logout: () => api.post('/auth/logout'),\n  verifyToken: () => api.post('/auth/verify-token'),\n  changePassword: (currentPassword, newPassword) => api.post('/auth/change-password', {\n    currentPassword,\n    newPassword\n  }),\n  getMe: () => api.get('/auth/me')\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: params => api.get('/users', {\n    params\n  }),\n  getUser: id => api.get(`/users/${id}`),\n  createUser: userData => api.post('/users', userData),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  deleteUser: id => api.delete(`/users/${id}`),\n  activateUser: id => api.put(`/users/${id}/activate`),\n  getDepartments: () => api.get('/users/departments')\n};\n\n// Attendance API\nexport const attendanceAPI = {\n  checkIn: notes => api.post('/attendance/check-in', {\n    notes\n  }),\n  checkOut: notes => api.post('/attendance/check-out', {\n    notes\n  }),\n  getMyRecords: params => api.get('/attendance/my-records', {\n    params\n  }),\n  getRecords: params => api.get('/attendance/records', {\n    params\n  }),\n  getRecord: id => api.get(`/attendance/records/${id}`),\n  updateRecord: (id, data) => api.put(`/attendance/records/${id}`, data),\n  getTodayStatus: () => api.get('/attendance/today-status')\n};\n\n// Tasks API\nexport const tasksAPI = {\n  getTasks: params => api.get('/tasks', {\n    params\n  }),\n  getTask: id => api.get(`/tasks/${id}`),\n  createTask: taskData => api.post('/tasks', taskData),\n  updateTask: (id, taskData) => api.put(`/tasks/${id}`, taskData),\n  deleteTask: id => api.delete(`/tasks/${id}`),\n  getTaskStats: () => api.get('/tasks/stats/overview'),\n  getMyTasks: params => api.get('/tasks/my-tasks', {\n    params\n  })\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAttendanceReport: params => api.get('/reports/attendance', {\n    params\n  }),\n  getTaskReport: params => api.get('/reports/tasks', {\n    params\n  }),\n  getDashboardStats: () => api.get('/reports/dashboard'),\n  getEmployeeReport: (id, params) => api.get(`/reports/employee/${id}`, {\n    params\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","logout","verifyToken","changePassword","currentPassword","newPassword","getMe","get","usersAPI","getUsers","params","getUser","id","createUser","userData","updateUser","put","deleteUser","delete","activateUser","getDepartments","attendanceAPI","checkIn","notes","checkOut","getMyRecords","getRecords","getRecord","updateRecord","data","getTodayStatus","tasksAPI","getTasks","getTask","createTask","taskData","updateTask","deleteTask","getTaskStats","getMyTasks","reportsAPI","getAttendanceReport","getTaskReport","getDashboardStats","getEmployeeReport"],"sources":["/Users/abhaytiwari/Desktop/OrbAi/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Auth API\nexport const authAPI = {\n    login: (email, password) => api.post('/auth/login', { email, password }),\n    logout: () => api.post('/auth/logout'),\n    verifyToken: () => api.post('/auth/verify-token'),\n    changePassword: (currentPassword, newPassword) =>\n        api.post('/auth/change-password', { currentPassword, newPassword }),\n    getMe: () => api.get('/auth/me'),\n};\n\n// Users API\nexport const usersAPI = {\n    getUsers: (params) => api.get('/users', { params }),\n    getUser: (id) => api.get(`/users/${id}`),\n    createUser: (userData) => api.post('/users', userData),\n    updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n    deleteUser: (id) => api.delete(`/users/${id}`),\n    activateUser: (id) => api.put(`/users/${id}/activate`),\n    getDepartments: () => api.get('/users/departments'),\n};\n\n// Attendance API\nexport const attendanceAPI = {\n    checkIn: (notes) => api.post('/attendance/check-in', { notes }),\n    checkOut: (notes) => api.post('/attendance/check-out', { notes }),\n    getMyRecords: (params) => api.get('/attendance/my-records', { params }),\n    getRecords: (params) => api.get('/attendance/records', { params }),\n    getRecord: (id) => api.get(`/attendance/records/${id}`),\n    updateRecord: (id, data) => api.put(`/attendance/records/${id}`, data),\n    getTodayStatus: () => api.get('/attendance/today-status'),\n};\n\n// Tasks API\nexport const tasksAPI = {\n    getTasks: (params) => api.get('/tasks', { params }),\n    getTask: (id) => api.get(`/tasks/${id}`),\n    createTask: (taskData) => api.post('/tasks', taskData),\n    updateTask: (id, taskData) => api.put(`/tasks/${id}`, taskData),\n    deleteTask: (id) => api.delete(`/tasks/${id}`),\n    getTaskStats: () => api.get('/tasks/stats/overview'),\n    getMyTasks: (params) => api.get('/tasks/my-tasks', { params }),\n};\n\n// Reports API\nexport const reportsAPI = {\n    getAttendanceReport: (params) => api.get('/reports/attendance', { params }),\n    getTaskReport: (params) => api.get('/reports/tasks', { params }),\n    getDashboardStats: () => api.get('/reports/dashboard'),\n    getEmployeeReport: (id, params) => api.get(`/reports/employee/${id}`, { params }),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}